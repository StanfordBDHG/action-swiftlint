name: 'SwiftLint'
description: 'A tool to enforce Swift style and conventions'
author: 'Andreas Bauer <mail@andi-bauer.com>'
branding:
  icon: 'terminal'
  color: 'green'
inputs:
  version:
    description: "A SwiftLint version to use."
    required: true
    default: 'latest'
  args:
    description: "Arguments to SwiftLint."
    required: false
  working-directory:
    description: "The working directory relative to the base `checkout` directory"
    required: true
    default: ''
runs:
  using: "composite"
  steps:
    - shell: bash
      run: echo SL_VERSION=${{ inputs.version }} >> $GITHUB_ENV
    - name: Determine latest version
      if: ${{ inputs.version == 'latest' }}
      shell: bash
      run: |
        TAG_VERSION=$(curl -I https://github.com/realm/SwiftLint/releases/latest |grep -ioE "tag/(\d+\.\d+\.\d+)")
        VERSION=${TAG_VERSION#"tag/"}
        echo SL_VERSION="${VERSION}" >> $GITHUB_ENV
        echo "Determined SwiftLint latest version: ${TAG_VERSION} ${VERSION}"

    - name: Download SwiftLint ${{ inputs.version }} (macOS)
      if: ${{ runner.os == 'macOS' }}
      shell: bash
      run: |
        mkdir download && cd download
        wget https://github.com/realm/SwiftLint/releases/download/${{ env.SL_VERSION }}/portable_swiftlint.zip
        unzip portable_swiftlint.zip
        echo SWIFTLINT_BINARY="$(pwd -L)/swiftlint" >> $GITHUB_ENV
      working-directory: ${{ github.action_path }}

    - name: Download SwiftLint ${{ inputs.version }} (Linux)
      if: ${{ runner.os == 'Linux' }}
      shell: bash
      run: |
        mkdir download && cd download
        wget https://github.com/realm/SwiftLint/releases/download/${{ env.SL_VERSION }}/swiftlint_linux.zip
        unzip swiftlint_linux.zip
        echo SWIFTLINT_BINARY="$(pwd -L)/swiftlint" >> $GITHUB_ENV
      working-directory: ${{ github.action_path }}

    - name: Print Environment
      shell: bash
      run: |
        echo "Downloaded SwiftLint ${{ env.SL_VERSION }} to ${{ env.SWIFTLINT_BINARY }}"
    - name: swiftlint
      run: ${{ github.action_path }}/swiftlint.sh ${{ inputs.swiftlint-args }}
      shell: bash
      working-directory: '${{ github.workspace }}/${{ inputs.working-directory }}'
